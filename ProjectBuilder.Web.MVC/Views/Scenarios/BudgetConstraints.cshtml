@using ProjectBuilder.Web.MVC.Models;
@model ScenarioBudgetConstraintsViewModel

@{
    ViewData["Title"] = "Budget Constraints";
}
<script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.js"></script>
<div class="scenarioedit_main-container">
    <partial name="~/Views/Shared/navbarshared/_scenarionavbar.cshtml" />
    <div class="scenarioedit_maincontent">
        <div class="scenarioedit_header">
            <div class="left-section">
                <h1 class="scenario-title">Budget Constraints</h1>
                <button class="btn btn-success">Import Budget</button>
                <button class="btn btn-success">Download Budget</button>
            </div>

            <h1 class="scenario-name">@Model.SelectedScenario</h1>

        </div>
        <div class="scenarioedit_body">
            <div class="card">
                <div class="card-body">
                    <div class="table-responsive">
                        <table id="budgetconstraintstable" class="table table-bordered table-hover table-striped">
                            <thead class="bg-success text-white">
                                <tr>
                                    <th>
                                        @Html.DisplayName("Year of work")
                                    </th>
                                    <th>
                                        @Html.DisplayName("District")
                                    </th>
                                    <th>
                                        @Html.DisplayName("Bridge Interstate Budget")
                                    </th>
                                    <th>
                                        @Html.DisplayName("Bridge Non-Interstate Budget")
                                    </th>
                                    <th>
                                        @Html.DisplayName("Pavement Interstate Budget")
                                    </th>
                                    <th>
                                        @Html.DisplayName("Pavement Non-Interstate Budget")
                                    </th>
                                    <th>
                                        @Html.DisplayName("Actions")
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var budget in Model.BudgetConstraints)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => budget.YearWork)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => budget.District)
                                        </td>
                                        <td>
                                            <input type="text" id="BridgeInterstateBudget" value="@budget.BridgeInterstateBudget" hidden />
                                            $
                                            @{
                                                decimal BridgeInterstateBudget = budget.BridgeInterstateBudget ?? 0;
                                                        @Math.Round(BridgeInterstateBudget / 1000000, 2).ToString("#,##0.00");
                                            }

                                        </td>
                                        <td>
                                            <input type="text" id="BridgeNonInterstateBudget" value="@budget.BridgeNonInterstateBudget" hidden />
                                            $
                                            @{
                                                decimal BridgeNonInterstateBudget = budget.BridgeNonInterstateBudget ?? 0;
                                                        @Math.Round(BridgeNonInterstateBudget / 1000000, 2).ToString("#,##0.00");
                                            }
                                        </td>
                                        <td>
                                            <input type="text" id="PavementInterstateBudget" value="@budget.PavementInterstateBudget" hidden />
                                            $
                                            @{
                                                decimal PavementInterstateBudget = budget.PavementInterstateBudget ?? 0;
                                                        @Math.Round(PavementInterstateBudget / 1000000, 2).ToString("#,##0.00");
                                            }
                                        </td>
                                        <td>
                                            <input type="text" id="PavementNonInterstateBudget" value="@budget.PavementNonInterstateBudget" hidden />
                                            $
                                            @{
                                                decimal PavementNonInterstateBudget = budget.PavementNonInterstateBudget ?? 0;
                                                        @Math.Round(PavementNonInterstateBudget / 1000000, 2).ToString("#,##0.00");
                                            }
                                        </td>
                                        <td>
                                            <button type="button"
                                                onclick="onbudgetconstraintscontextmenu.bind(this,event)()"
                                                class="circlebutton" context-menu value=@Json.Serialize(new {District = budget.District, Yearofwork = budget.YearWork })>
                                                <i context-menu class="fa-solid fa-ellipsis-vertical"></i>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="contextmenu" class="contextmenu-container">
        <ul class="menu">
            <li class="menuitem">
                <button type="button" data-bs-toggle="modal" data-bs-target="#budgetconstraintsdialog">
                    <i class="fa-regular fa-pen-to-square"></i>
                    <span>Edit</span>
                </button>
            </li>
            <hr />
            <li class="menuitem">
                <button type="button" id="deletebudget" data-bs-toggle="modal" data-bs-target="#deletealert">
                    <i class="fa-regular fa-trash-can"></i>
                    <span>Delete</span>
                </button>
            </li>
        </ul>
    </div>
    <div class="modal fade" id="budgetconstraintsdialog" tabindex="-1" role="dialog" aria-labelledby="budgetconstraintslabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="budgetconstraintslabel">Update Budget Constraints</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <form id="budgetconstraintsform" class="needs-validation" asp-controller="EditScenario" asp-route-scenid="@Model.ScenarioId"
                    asp-action="UpdateBudgetConstraints" method="post" novalidate>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="district" class="form-label">District</label>
                            <input type="number" name="district"  id="district" class="form-control" readonly />
                            <div class="invalid-feedback">Field is required</div>
                        </div>
                        <div class="mb-3">
                            <label for="yearwork" class="form-label">Year</label>
                            <input name="yearwork" id="yearwork" type="number" class="form-control" readonly />
                            <div class="invalid-feedback">Field is required</div>
                        </div>
                        <div class="mb-3">
                            <label for="bridgeinterstatebudget" class="form-label">Bridge Interstate Budget ($M)</label>
                            <input id="bridgeinterstatebudgetHide" name="bridgeinterstatebudget" hidden type="text" />
                            <input name="" oninput="bridint(this.value)" id="bridgeinterstatebudget" type="text"
                                class="form-control" required />
                            <div class="invalid-feedback">Field is required</div>
                        </div>
                        <div class="mb-3">
                            <label for="bridgenoninterstatebudget" class="form-label">Bridge None-Interstate
                                Budget ($M)</label>
                            <input id="bridgenoninterstatebudgetHide" name="bridgenoninterstatebudget" hidden type="text" />
                            <input name="" id="bridgenoninterstatebudget" oninput="bridNonint(this.value)" type="text"
                                class="form-control" required />
                            <div class="invalid-feedback">Field is required</div>
                        </div>
                        <div class="mb-3">
                            <label for="pavementinterstatebudget" class="form-label">Pavement Interstate Budget ($M)</label>
                            <input id="pavementinterstatebudgetHide" name="pavementinterstatebudget" hidden type="text" />
                            <input name="" oninput="paveinter(this.value)" id="pavementinterstatebudget" type="text"
                                class="form-control" required />
                            <div class="invalid-feedback">Field is required</div>
                        </div>
                        <div class="mb-3">
                            <label for="pavementnoninterstatebudget" class="form-label">Pavement Non-Interstate
                                Budget ($M)</label>
                            <input id="pavementnoninterstatebudgetHide" name="pavementnoninterstatebudget" hidden type="text" />
                            <input name="" oninput="paveNonInter(this.value)" id="pavementnoninterstatebudget" type="text"
                                class="form-control" required />
                            <div class="invalid-feedback">Field is required</div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-success">Update</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="modal fade" id="deletealert" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
         aria-labelledby="deletealertLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deletealertLabel">Delete Project Treatment</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body d-flex align-items-center">
                    <i class="bi bi-exclamation-octagon-fill text-danger fa-2x me-3"></i>
                    <span>
                        Are you sure you want to delete the selected Project Treatment?
                    </span>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <form id="deleterecordform" asp-antiforgery="true" asp-action="DeleteScenarioBudget" asp-controller="EditScenario" method="post">
                        <input hidden name="scenid" id="scenarioid" value="@Model.ScenarioId" />
                        <input hidden name="yearofwork" id="deletedyearofwork" />
                        <input hidden name="district" id="deleteddistrict" />
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
@section Styles{
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/jquery.dataTables.css" />
    <link rel="stylesheet" href="~/css/scenarioedit_styles.css" />
}

<style>
    .scenarioedit_header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 20px;
        margin-bottom: 10px;
        width: 100%;
    }

    .left-section {
        display: flex;
        align-items: center;
    }

    .left-section h1 {
        margin: 0;
        margin-right: 15px; /* spacing between title and buttons */
    }

    .left-section .btn {
        margin-right: 10px;
    }

    .scenario-name {
        margin: 0;
    }
</style>

<script>
    $(document).ready(function () {
        var table = $('#budgetconstraintstable').DataTable({
            searching: false
        });
        $('#deletebudget').on('click', function () {
            var values = JSON.parse($(this).attr('current-id'));
            $('#deleteddistrict').val(values.district);
            $('#deletedyearofwork').val(values.yearofwork);
        });
    });
    function onbudgetconstraintscontextmenu(event) {
        oncontextmenuclicked.bind(this, event)();
        oneditingbudgetconstraints(this);
    }
    
    
    // Values changing on run time

    function bridint(value) {
        value = value.replace(/,/g, '');
        let result = parseFloat(value) * 1000000;
        document.getElementById("bridgeinterstatebudgetHide").value = result;
    }

    function bridNonint(value) {
        value = value.replace(/,/g, '');
        let result = parseFloat(value) * 1000000;
        document.getElementById("bridgenoninterstatebudgetHide").value = result;
    }

    function paveinter(value) {
        value = value.replace(/,/g, '');
        let result = parseFloat(value) * 1000000;
        document.getElementById("pavementinterstatebudgetHide").value = result;
    }
    function paveNonInter(value) {
        value = value.replace(/,/g, '');
        let result = parseFloat(value) * 1000000;
        document.getElementById("pavementnoninterstatebudgetHide").value = result;
    }
</script>
